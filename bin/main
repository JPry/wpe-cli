#!/usr/bin/env php
<?php

use JPry\Command\AddAccount;
use JPry\Command\CLIRun;
use JPry\Command\ListAccounts;
use JPry\Command\RemoveAccount;
use JPry\Helper\StorageFile;
use Symfony\Component\Console\Application;
use Symfony\Component\Console\Exception\CommandNotFoundException;
use Symfony\Component\Console\Input\ArgvInput;
use Symfony\Component\Filesystem\Filesystem;

require_once(dirname(__DIR__) . '/vendor/autoload.php');

$version = trim(file_get_contents(dirname(__DIR__) . '/version'));
$version = $version !== '@' . 'git-tag@' ? $version : 'dev';

// Set up some requirements
$storage = new StorageFile(new Filesystem());
$app = new Application('wpe_cli', $version);
$helpers = $app->getHelperSet();
$helpers->set($storage);
$app->setHelperSet($helpers);

// Get all of our commands and store them in an array.
$main = new CLIRun();
$commands = array(
    $main,
    new AddAccount(),
    new RemoveAccount(),
    new ListAccounts(),
);

// Add commands to the application
$app->addCommands($commands);

// Maybe adjust the command to run.
$input = new ArgvInput();
try {
    if (1 > $argc && false === $input->hasParameterOption(array('--help', '-h'), true)) {
        $app->find($input->getFirstArgument());
    }
} catch (CommandNotFoundException $e) {
    $args = array_slice($argv, 0, 1);
    $args[] = $main->getName();
    $args = array_merge($args, array_slice($argv, 1));
    $input = new ArgvInput($args);
}

// Run the app
$app->run($input);
